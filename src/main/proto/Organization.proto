syntax = "proto3";

option java_package = "io.openmarket.organization.grpc";

service Organization {
  rpc addOrganization (OrgMetadata) returns (AddOrgResult) {}
  rpc getOrganization (GetOrgRequest) returns (GetOrgResult) {}
  rpc updateOrganization(OrgMetadata) returns (OrgUpdateResult) {}
  rpc updateFollower(UpdateFollowerRequest) returns (UpdateFollowerResult) {}
  rpc getFollowers(GetFollowerRequest) returns (GetFollowerResult) {}
  rpc isUserFollowing(IsUserFollowingRequest) returns (IsUserFollowingResult) {}
}

enum Error {
  NONE = 0;
  ORG_DOES_NOT_EXIST = 1;
}

message AddOrgResult {
  enum AddOrgError {
    NONE = 0;
    ALREADY_EXIST = 1;
    INVALID_ORG_PARAMETER = 2;
  }
  AddOrgError error = 1;
}

message IsUserFollowingRequest {
  string userId = 1;
  string orgId = 2;
}

message GetOrgResult {
  Error error = 1;
  OrgMetadata organization = 2;
}

message IsUserFollowingResult {
  bool isFollowing = 1;
}

message GetFollowerRequest {
  string orgId = 1;
}

message GetFollowerResult {
  repeated string userIds = 1;
}

message UpdateFollowerRequest {
  string userId = 1;
  string orgId = 2;
}

message UpdateFollowerResult {
}

message GetOrgRequest {
  string orgName = 1;
}

message OrgUpdateResult {
  enum UpdateError {
    NONE = 0;
    CANNOT_FIND_ORG = 1;
    INTERNAL_ERROR = 2;
    POSTER_ALREADY_EXIST = 3;
  }

  UpdateError error = 1;
}

message OrgMetadata {
  string orgName = 1;
  string orgDescription = 2;
  string orgOwnerId = 3;
  string orgPortraitS3Key = 5;
  string orgCurrency = 6;
  uint32 followerCount = 7;
  string orgPosterS3Key = 8;
}
