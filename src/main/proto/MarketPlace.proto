syntax = "proto3";
option java_outer_classname = "MarketPlaceProto";
option java_package = "io.openmarket.marketplace.grpc";

package marketplace;

service MarketPlace{
  rpc checkout(CheckOutRequest) returns (CheckOutResult) {}
  rpc getAllOrders(GetAllOrdersRequest) returns (GetAllOrdersResult) {}
  rpc handleGetOrgItems(GetOrgItemsRequest) returns (GetOrgItemsResult) {}
}

message GetOrgItemsRequest{
  string orgId = 1;
  string exclusiveStartKey = 2;
  uint32 maxCount = 3;
}

message GetOrgItemsResult{
  enum GetOrgItemsError {
    NONE  = 0;
    ORG_DOES_NOT_EXIST = 1;
  }
  GetOrgItemsError error = 1;
  string lastEvaluatedKey = 2;
  repeated MarketPlaceItem items = 3;
}

message GetAllOrdersRequest {
  Role role = 1;
  string exclusiveStartKey = 2;
  uint32 maxCount = 3;
}

message GetAllOrdersResult {
  string lastEvaluatedKey = 1;
  repeated Order orders = 2;
}

message CheckOutRequest {
  map<int32, int32> items = 1;
}

message CheckOutResult {
  Error error = 1;
  repeated Order successOrders = 2;
  map<int32, FailedCheckOutCause> failedItems = 3;
}

message Order {
  string orderId = 1;
  string buyerId = 2;
  string sellerId = 3;
  string currency = 4;
  string transactionId = 5;
  OrderStatus status = 6;
  double totalAmount = 7;
  string createdAt = 8;
  string lastUpdatedAt = 9;
  repeated OrderedItem items = 10;
}

message OrderedItem {
  int32 itemId = 1;
  int32 quantity = 2;
  string itemName = 3;
  double itemPrice = 4;
}

message MarketPlaceItem {
  string itemId = 1;
  string itemName = 2;
  string itemImageLink = 3;
  string itemDescription = 4;
  double itemPrice = 5;
  uint32 itemStock = 6;
  string belongTo = 7;
  string category = 8;
}

enum FailedCheckOutCause {
  OUT_OF_STOCK = 0;
  ITEM_DOES_NOT_EXIST = 1;
  INSUFFICIENT_BALANCE = 2;
  ILLEGAL_ARGUMENT = 3;
}

enum OrderStatus {
  PENDING_PAYMENT = 0;
  PAYMENT_CONFIRMED = 1;
  PAYMENT_NOT_RECEIVED = 2;
  CANCELLED = 3;
}

enum Role {
  BUYER = 0;
  SELLER = 1;
}

enum Error {
  NONE = 0;
  INTERNAL_SERVICE_ERROR = 1;
}